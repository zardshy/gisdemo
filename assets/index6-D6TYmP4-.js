import{c as m,s as d}from"./useTrack-Ct2ePmB2.js";import{i as p}from"./useCamera-BQK0mUjQ.js";import{d as f,r as o,o as y,n as C,c as h,a as g}from"./index-Bllr1IOy.js";const k=f({__name:"index6",setup(T){const s=o();let t={};const n=o();y(()=>{t=m(s.value),d(t,"ARCGIS"),p(t,{h:5.926657446246964,p:-.23571262295412798,r:6.283016097701191,x:-334027.8955235978,y:5620578936839442e-9,z:2.9953172366602025e6},!1),c(t),C(()=>{})});const c=a=>{(async e=>{try{const r=await Cesium.CesiumTerrainProvider.fromUrl("//data.mars3d.cn/terrain",{requestWaterMask:!0,requestVertexNormals:!0}),i=await Cesium.createWorldTerrainAsync({requestWaterMask:!0,requestVertexNormals:!0});e.terrainProvider=r,u()}catch(r){console.log(`Failed to add world imagery: ${r}`)}})(a);const u=()=>{let e=1650,r=3e3,i=[93.2827004303387,28.1971658205202,1600,93.35516034478225,28.354648785204017,1600,93.4361284005706,28.207164975096667,1600];a.entities.add({polygon:{hierarchy:new Cesium.PolygonHierarchy(Cesium.Cartesian3.fromDegreesArrayHeights(i)),perPositionHeight:!0,extrudedHeight:new Cesium.CallbackProperty(()=>(e+=1,n.value=e,e>r&&(e=r),e),!1),material:Cesium.Color.fromBytes(64,157,253,150),closeTop:!0,closeBottom:!0,fill:!0,classificationType:Cesium.ClassificationType.BOTH}})}};return(a,l)=>(g(),h("div",{ref_key:"cesiumContainer",ref:s,class:"cesiumContainer"},null,512))}});export{k as default};
